events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile             on;
    gzip                 on;
    gzip_vary            on;
    gzip_min_length      1000;
    gzip_proxied         any;
    gzip_types           text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
    gzip_disable         "MSIE [1-6]\.";
    client_max_body_size 100M;

    # Strongly recommend doing all of this over https. ie. leave this here.
    server {
        listen       80;
        server_name  localhost;
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen                     443 ssl;
        server_name                localhost;

        # Go make an SSL cert. They're free or super cheap now days.
        ssl_certificate            cert.pem;
        ssl_certificate_key        cert.key;
        ssl_trusted_certificate    ca.pem;
        ssl_dhparam                dhparams;
        ssl_session_cache          shared:SSL:60m;
        ssl_session_timeout        1d;
        ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers                'HIGH:AES256+EECDH:AES256+EDH:!aNULL';
        ssl_ecdh_curve             secp384r1;
        ssl_prefer_server_ciphers  on;
        ssl_stapling               on;
        ssl_stapling_verify        on;
        ssl_session_tickets        on;

        keepalive_timeout          600s;
        keepalive_requests         1000000;
        auth_basic                 'Indigo Control Server';
        auth_basic_user_file       /usr/local/etc/nginx/htpasswd;

        send_timeout               60000;
        proxy_http_version         1.1;
        proxy_buffering            off;
        proxy_redirect             off;
        proxy_read_timeout         90000s;
        proxy_send_timeout         60000s;
        proxy_connect_timeout      75s;
        proxy_ignore_client_abort  on;
        proxy_pass_header          Server;
        proxy_pass_request_headers on;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-Proto https;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Port  443;

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }


    # These belong to Plex, and they need to not have auth. Plex does its own auth.
        location = / {
            auth_basic "off";
            if ($http_referer ~ (.*)plex(.*)) {
                proxy_pass http://127.0.0.1:32400$request_uri;
                break;
            }
            if ($args ~ (.*)X-Plex-(.*)) {
                proxy_pass http://127.0.0.1:32400$request_uri;
                break;
            }
            return 301 https://$host/index.htm;
        }

        location / {
            root   html;
            index  index.htm index.php;
        }

    # This is optional, and require php-fpm (and probably other configs)
        location ~ \.php$ {
            root html;
            fastcgi_index  index.php;
            include fastcgi.conf;
            fastcgi_pass 127.0.0.1:9000;
        }

    # Tautalli
        location /tautulli {
            proxy_pass http://127.0.0.1:8181/tautulli;
            proxy_read_timeout 90;
            proxy_set_header X-Forwarded-Ssl "on";
            proxy_redirect ~^(http(?:s)?://)([^:/]+)(?::\d+)?(/.*)?$ $1$host$3;
        }

    # Plex Media Server
        location ~ ^/(web|plex)/?$ {
            return 301 https://$host/web/index.html;
        }
        location ~ ^/(\?(?:.*)(X-Plex)|web|video|photo|library|status/|system|updater|clients|identity|hubs|(live)?tv|media|transcode|music|activities|channels|:|playQueues) {
            auth_basic "off";
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cookie_path /web/ /;
            proxy_pass http://127.0.0.1:32400$request_uri;
        }

    # Jackett
        location /jackett {
            proxy_set_header Host 127.0.0.1;
            proxy_pass http://127.0.0.1:9117/jackett;
        }

    # Deluge
        location /torrents {
            auth_basic "off";
            proxy_set_header X-Deluge-Base "/torrents/";
            proxy_set_header X-Frame-Options SAMEORIGIN;
            proxy_pass http://127.0.0.1:8112/;
        }

    # NZBGet
        location /nzbget {
            proxy_pass http://127.0.0.1:16789$request_uri;
        }

    # Lidarr
        location /lidarr {
            proxy_set_header Host 127.0.0.1;
            proxy_pass http://127.0.0.1:8686/lidarr;
        }

    # Radarr
        location /radarr {
            proxy_pass http://127.0.0.1:7878/radarr;
        }

    # Sonarr
        location /sonarr {
            proxy_set_header Host 127.0.0.1;
            proxy_pass http://127.0.0.1:8989/sonarr;
        }

    # Bazarr
        location /bazarr {
            proxy_pass http://127.0.0.1:6767/bazarr;
        }

    # Grafana
        location /grafana/ {
            proxy_set_header X-WEBAUTH-USER $remote_user;
            rewrite ^/grafana/(.*) /$1 break;
            proxy_pass http://192.168.3.1:3000/;
        }

    # Indigo: Devices, Actions, Variables, Server Control
        location ~ ^/(variables|devices|actions|refreshingimage|server(request|command)) {
            auth_basic_user_file htpasswd_admins;
            proxy_pass http://192.168.3.1:8176$request_uri;
        }
    # Indigo: Display Pages, Resources
        location ~ ^/(css/(dialog|fonts|controlpage4|indigo4|global4).css|js/(dialog|prototype)_pa.js|_get|_docontrol|controlpage|editvarpage|image|indigo|basicpage|popupdevicepage) {
            proxy_pass http://192.168.3.1:8176$request_uri;
        }

    # SecuritySpy: Camera Settings, Preferences and Schedule Settings, PTZ Controls
        location ~ ^/(camerasettings|preferences|\+\+ssSet|ptz) {
            auth_basic_user_file htpasswd_admins;
            proxy_pass http://192.168.3.1:8000$request_uri;
        }
    # SecuritySpy: Viewing-Only Pages
        location ~ ^/(css|download|(spacer|tick|question|dl[hl]q)\.png|status_|icon_|js|\+\+|live|play|index.html|Request401ResponseForLogOut|logged-out|refreshingimage) {
            proxy_pass http://192.168.3.1:8000$request_uri;
        }

    # Unifi seems to have quit working with a recent update, and I've been unable to resurrect this support. -Jan2019

    # Unifi Controller
        location /wss {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass https://192.168.3.1:8443$request_uri;
        }
    # Unifi Controller
        location ~ ^/(api|file|manage|status$|sso) {
            proxy_pass https://192.168.3.1:8443$request_uri;
        }
    }
}

# This allows you to proxy The Indigo Remote Control port. Only useful if you're fire-walling your Mac.
stream {
    server {
        listen 1176;
        proxy_pass 192.168.3.1:1177;
    }
}
